PS C:\Users\AD54619\Text2Sql> python load.py --question "What is the average, minimum, and maximum age for all French musicians?" --schema_file schema.txt
config.json: 100%|██████████████████████████████████████████████████████████████████████| 813/813 [00:00<00:00, 4.84MB/s]
C:\Users\AD54619\Text2Sql\virtualen\Lib\site-packages\huggingface_hub\file_download.py:144: UserWarning: `huggingface_hub` cache-system uses symlinks by default to efficiently store duplicated files but your machine does not support them in C:\Users\AD54619\.cache\huggingface\hub\models--gaussalgo--T5-LM-Large-text2sql-spider. Caching files will still work but in PS C:\Users\AD54619\Text2Sql> python run_text2sql.py --question "What is the average, minimum, and maximum age for all French musicians?" --schema_file schema.txt
C:\Users\AD54619\Text2Sql\virtualen\Scripts\python.exe: can't open file 'C:\\Users\\AD54619\\Text2Sql\\run_text2sql.py': [Errno 2] No such file or directory
PS C:\Users\AD54619\Text2Sql> python load.py --question "What is the average, minimum, and maximum age for all French musicians?" --schema_file schema.txt
config.json: 100%|██████████████████████████████████████████████████████████████████████| 813/813 [00:00<00:00, 4.84MB/s] 
C:\Users\AD54619\Text2Sql\virtualen\Lib\site-packages\huggingface_hub\file_download.py:144: UserWarning: `huggingface_hub` cache-system uses symlinks by default to efficiently store duplicated files but your machine does not support them in C:\Users\AD54619\.cache\huggingface\hub\models--gaussalgo--T5-LM-Large-text2sql-spider. Caching files will still work but in C:\Users\AD54619\Text2Sql\virtualen\Scripts\python.exe: can't open file 'C:\\Users\\AD54619\\Text2Sql\\run_text2sql.py': [Errno 2] No such file or directory
PS C:\Users\AD54619\Text2Sql> python load.py --question "What is the average, minimum, and maximum age for all French musicians?" --schema_file schema.txt
config.json: 100%|██████████████████████████████████████████████████████████████████████| 813/813 [00:00<00:00, 4.84MB/s] 
C:\Users\AD54619\Text2Sql\virtualen\Lib\site-packages\huggingface_hub\file_download.py:144: UserWarning: `huggingface_hub` cache-system uses symlinks by default to efficiently store duplicated files but your machine does not support them in C:\Users\AD54619\.cache\huggingface\hub\models--gaussalgo--T5-LM-Large-text2sql-spider. Caching files will still work but in PS C:\Users\AD54619\Text2Sql> python load.py --question "What is the average, minimum, and maximum age for all French musicians?" --schema_file schema.txt
config.json: 100%|██████████████████████████████████████████████████████████████████████| 813/813 [00:00<00:00, 4.84MB/s] 
C:\Users\AD54619\Text2Sql\virtualen\Lib\site-packages\huggingface_hub\file_download.py:144: UserWarning: `huggingface_hub` cache-system uses symlinks by default to efficiently store duplicated files but your machine does not support them in C:\Users\AD54619\.cache\huggingface\hub\models--gaussalgo--T5-LM-Large-text2sql-spider. Caching files will still work but in cians?" --schema_file schema.txt
config.json: 100%|██████████████████████████████████████████████████████████████████████| 813/813 [00:00<00:00, 4.84MB/s] 
C:\Users\AD54619\Text2Sql\virtualen\Lib\site-packages\huggingface_hub\file_download.py:144: UserWarning: `huggingface_hub` cache-system uses symlinks by default to efficiently store duplicated files but your machine does not support them in C:\Users\AD54619\.cache\huggingface\hub\models--gaussalgo--T5-LM-Large-text2sql-spider. Caching files will still work but in config.json: 100%|██████████████████████████████████████████████████████████████████████| 813/813 [00:00<00:00, 4.84MB/s] 
C:\Users\AD54619\Text2Sql\virtualen\Lib\site-packages\huggingface_hub\file_download.py:144: UserWarning: `huggingface_hub` cache-system uses symlinks by default to efficiently store duplicated files but your machine does not support them in C:\Users\AD54619\.cache\huggingface\hub\models--gaussalgo--T5-LM-Large-text2sql-spider. Caching files will still work but in C:\Users\AD54619\Text2Sql\virtualen\Lib\site-packages\huggingface_hub\file_download.py:144: UserWarning: `huggingface_hub` cache-system uses symlinks by default to efficiently store duplicated files but your machine does not support them in C:\Users\AD54619\.cache\huggingface\hub\models--gaussalgo--T5-LM-Large-text2sql-spider. Caching files will still work but in  cache-system uses symlinks by default to efficiently store duplicated files but your machine does not support them in C:\Users\AD54619\.cache\huggingface\hub\models--gaussalgo--T5-LM-Large-text2sql-spider. Caching files will still work but in Users\AD54619\.cache\huggingface\hub\models--gaussalgo--T5-LM-Large-text2sql-spider. Caching files will still work but in a degraded version that might require more space on your disk. This warning can be disabled by setting the `HF_HUB_DISABLEa degraded version that might require more space on your disk. This warning can be disabled by setting the `HF_HUB_DISABLE_SYMLINKS_WARNING` environment variable. For more details, see https://huggingface.co/docs/huggingface_hub/how-to-cache#limitations.
mitations.
To support symlinks on Windows, you either need to activate Developer Mode or to run Python as an administrator. In order to activate developer mode, see this article: https://docs.microsoft.com/en-us/windows/apps/get-started/enable-your-device-for-development
  warnings.warn(message)
model.safetensors: 100%|████████████████████████████████████████████████████████████| 3.13G/3.13G [09:48<00:00, 5.32MB/s] 
generation_config.json: 100%|███████████████████████████████████████████████████████████| 142/142 [00:00<00:00, 1.18MB/s] 
tokenizer_config.json: 100%|████████████████████████████████████████████████████████| 2.35k/2.35k [00:00<00:00, 16.9MB/s] 
spiece.model: 100%|███████████████████████████████████████████████████████████████████| 792k/792k [00:00<00:00, 5.26MB/s] 
tokenizer.json: 100%|███████████████████████████████████████████████████████████████| 2.42M/2.42M [00:01<00:00, 2.13MB/s] 
special_tokens_map.json: 100%|██████████████████████████████████████████████████████| 2.20k/2.20k [00:00<00:00, 26.4MB/s] 
Processing query...


from transformers import AutoModelForSeq2SeqLM, AutoTokenizer
import torch
import argparse

def generate_sql(question, schema):
    # Load with lower precision to save memory
    model = AutoModelForSeq2SeqLM.from_pretrained(
        'gaussalgo/T5-LM-Large-text2sql-spider',
        torch_dtype=torch.float16,  # Use half precision
        device_map="auto"  # Automatically decide best device placement
    )
    tokenizer = AutoTokenizer.from_pretrained('gaussalgo/T5-LM-Large-text2sql-spider')
    
    input_text = " ".join(["Question: ", question, "Schema:", schema])
    
    print("Processing query...")
    model_inputs = tokenizer(input_text, return_tensors="pt")
    
    # Move inputs to the same device as model
    for k, v in model_inputs.items():
        model_inputs[k] = v.to(model.device)
    
    outputs = model.generate(
        **model_inputs,
        max_length=512,
        num_beams=5,  # Beam search for better results
        early_stopping=True
    )
    
    sql_query = tokenizer.batch_decode(outputs, skip_special_tokens=True)[0]
    return sql_query

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Generate SQL from natural language')
    parser.add_argument('--question', type=str, help='The natural language question')
    parser.add_argument('--schema_file', type=str, help='File containing the database schema')
    
    args = parser.parse_args()
    
    if args.question and args.schema_file:
        with open(args.schema_file, 'r') as f:
            schema = f.read()
        
        sql = generate_sql(args.question, schema)
        print("\nGenerated SQL Query:")
        print(sql)
    else:
        # Use the example from your code if no arguments provided
        question = "What is the average, minimum, and maximum age for all French musicians?"
        schema = """
           "stadium" "Stadium_ID" int , "Location" text , "Name" text , "Capacity" int , "Highest" int , "Lowest" int , "Average" int , foreign_key:  primary key: "Stadium_ID" [SEP] "singer" "Singer_ID" int , "Name" text , "Country" text , "Song_Name" text , "Song_release_year" text , "Age" int , "Is_male" bool , foreign_key:  primary key: "Singer_ID" [SEP] "concert" "concert_ID" int , "concert_Name" text , "Theme" text , "Year" text , foreign_key: "Stadium_ID" text from "stadium" "Stadium_ID" , primary key: "concert_ID" [SEP] "singer_in_concert"  foreign_key: "concert_ID" int from "concert" "concert_ID" , "Singer_ID" text from "singer" "Singer_ID" , primary key: "concert_ID" "Singer_ID"
        """
        
        sql = generate_sql(question, schema)
        print("\nGenerated SQL Query:")
        print(sql)
