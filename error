KeyboardInterrupt
PS C:\Users\AD54619\Text2Sql> python simple_tiny.py
‚è≥ Loading TinyLlama model (HuggingFace style)...
‚úÖ Model loaded!
Device set to use cpu

üîπTinyLlama Chat w/ MySQL using custom prompt (no chain-of-thought).

Type 'exit' or 'quit' to stop.

User Question: give me employees whoose salary is more than 50000
C:\Users\AD54619\Text2Sql\simple_tiny.py:84: LangChainDeprecationWarning: The method `BaseLLM.__call__` was deprecated in langchain-core 0.1.7 and will be removed in 1.0. Use :meth:`~invoke` instead.
  result = llm(prompt)

Generated SQL Query:
Generate an SQL query strictly based on the schema provided.

Schema:
Table: employees
  - [Error retrieving columns]

Question:
give me employees whoose salary is more than 50000

Only output SQL code. Do not output any explanation or additional text.
SQL:
SELECT * FROM employees
WHERE salary > 50000;


‚ùå Error executing query: Not an executable object: 'Generate an SQL query strictly based on the schema provided.\n\nSchema:\nTable: employees\n  - [Error retrieving columns]\n\nQuestion:\ngive me employees whoose salary is more than 50000\n\nOnly output SQL code. Do not output any explanation or additional text.\nSQL:\nSELECT * FROM employees\nWHERE salary > 50000;'

User Question:
















PS C:\Users\AD54619\Text2Sql> python better_tiny.py
‚è≥ Loading TinyLlama model (HuggingFace style)...
‚úÖ Model loaded!
Device set to use cpu

üîπTinyLlama Chat w/ MySQL using LangChain.

Type 'exit' or 'quit' to stop.

[DEBUG] Table Names: ['departments', 'employees']
User Question: which employees belong to finance department
[DEBUG] Using these tables: ['employees']
Traceback (most recent call last):
  File "C:\Users\AD54619\Text2Sql\better_tiny.py", line 119, in <module>
    main()
    ~~~~^^
  File "C:\Users\AD54619\Text2Sql\better_tiny.py", line 103, in main
    chain = create_sql_query_chain(
        llm=llm,
        db=filtered_db,
        prompt=custom_prompt
    )
  File "C:\Users\AD54619\Text2Sql\virtualen\Lib\site-packages\langchain\chains\sql_database\query.py", line 122, in create_sql_query_chain  
    raise ValueError(
    ...<3 lines>...
    )
ValueError: Prompt must have input variables: 'input', 'top_k', 'table_info'. Received prompt with input variables: ['question']. Full prompt:

input_variables=['question'] input_types={} partial_variables={} template='Generate a valid MySQL query for the following question:\n{question}\n\nReturn ONLY the SQL query. No extra explanation or examples.'


























S C:\Users\AD54619\Text2Sql> python better_tiny.py
‚è≥ Loading TinyLlama model (HuggingFace style)...
‚úÖ Model loaded!
Device set to use cpu

üîπ TinyLlama MySQL Demo (Raw DB results only). Type 'exit' or 'quit' to stop.

Traceback (most recent call last):
  File "C:\Users\AD54619\Text2Sql\better_tiny.py", line 115, in <module>
    main()
    ~~~~^^
  File "C:\Users\AD54619\Text2Sql\better_tiny.py", line 84, in main
    columns = db.get_table_info(tbl)
  File "C:\Users\AD54619\Text2Sql\virtualen\Lib\site-packages\langchain_community\utilities\sql_database.py", line 322, in get_table_info   
    raise ValueError(f"table_names {missing_tables} not found in database")
ValueError: table_names {'a', 't', 'p', 'e', 'n', 'm', 'd', 's', 'r'} not found in database























User Question: employee name whose salary is more than 50000
[DEBUG] Using tables: ['departments', 'employees']
[chain/start] [chain:RunnableSequence] Entering Chain run with input:
{
  "input": "employee name whose salary is more than 50000"
}
[chain/start] [chain:RunnableSequence > chain:RunnableAssign<input,table_info>] Entering Chain run with input:
{
  "input": "employee name whose salary is more than 50000"
}
[chain/start] [chain:RunnableSequence > chain:RunnableAssign<input,table_info> > chain:RunnableParallel<input,table_info>] Entering Chain run with input:
{
  "input": "employee name whose salary is more than 50000"
}
[chain/start] [chain:RunnableSequence > chain:RunnableAssign<input,table_info> > chain:RunnableParallel<input,table_info> > chain:RunnableLambda] Entering Chain run with input:
{
  "input": "employee name whose salary is more than 50000"
}
[chain/start] [chain:RunnableSequence > chain:RunnableAssign<input,table_info> > chain:RunnableParallel<input,table_info> > chain:RunnableLambda] Entering Chain run with input:
{
  "input": "employee name whose salary is more than 50000"
}
[chain/end] [chain:RunnableSequence > chain:RunnableAssign<input,table_info> > chain:RunnableParallel<input,table_info> > chain:RunnableLambda] [8ms] Exiting Chain run with output:
{
  "output": "\nCREATE TABLE departments (\n\tid INTEGER NOT NULL, \n\tdepartment_name TEXT NOT NULL, \n\tlocation TEXT, \n\tPRIMARY KEY (id)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from departments table:\nid\tdepartment_name\tlocation\n1\tEngineering\tNew York\n2\tMarketing\tChicago\n3\tFinance\tBoston\n*/\n\n\nCREATE TABLE employees (\n\tid INTEGER NOT NULL, \n\tname TEXT NOT NULL, \n\tage INTEGER, \n\tdepartment TEXT, \n\tsalary INTEGER, \n\tPRIMARY KEY (id)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from employees table:\nid\tname\tage\tdepartment\tsalary\n101\tJohn Smith\t35\t1\t85000\n102\tSarah Johnson\t42\t2\t78000\n103\tMichael Brown\t28\t1\t72000\n*/"
}
[chain/error] [chain:RunnableSequence > chain:RunnableAssign<input,table_info> > chain:RunnableParallel<input,table_info> > chain:RunnableLambda] [57ms] Chain run errored with error:
"KeyError('question')Traceback (most recent call last):\n\n\n  File \"C:\\Users\\AD54619\\Text2Sql\\virtualen\\Lib\\site-packages\\langchain_core\\runnables\\base.py\", line 1925, in _call_with_config\n    context.run(\n    ~~~~~~~~~~~^\n        call_func_with_variable_args,  # type: ignore[arg-type]\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<4 lines>...\n        **kwargs,\n        ^^^^^^^^^\n    ),\n    ^\n\n\n  File \"C:\\Users\\AD54619\\Text2Sql\\virtualen\\Lib\\site-packages\\langchain_core\\runnables\\config.py\", line 430, in call_func_with_variable_args\n    return func(input, **kwargs)  # type: ignore[call-arg]\n\n\n  File \"C:\\Users\\AD54619\\Text2Sql\\virtualen\\Lib\\site-packages\\langchain_core\\runnables\\base.py\", line 4573, in _invoke\n    output = call_func_with_variable_args(\n        self.func, input, config, run_manager, **kwargs\n    )\n\n\n  File \"C:\\Users\\AD54619\\Text2Sql\\virtualen\\Lib\\site-packages\\langchain_core\\runnables\\config.py\", line 430, in call_func_with_variable_args\n    return func(input, **kwargs)  # type: ignore[call-arg]\n\n\n  File \"C:\\Users\\AD54619\\Text2Sql\\virtualen\\Lib\\site-packages\\langchain\\chains\\sql_database\\query.py\", line 131, in <lambda>\n    \"input\": lambda x: x[\"question\"] + \"\\nSQLQuery: \",\n                       ~^^^^^^^^^^^^\n\n\nKeyError: 'question'"
[chain/error] [chain:RunnableSequence > chain:RunnableAssign<input,table_info> > chain:RunnableParallel<input,table_info>] [94ms] Chain run errored with error:
"KeyError('question')Traceback (most recent call last):\n\n\n  File \"C:\\Users\\AD54619\\Text2Sql\\virtualen\\Lib\\site-packages\\langchain_core\\runnables\\base.py\", line 3728, in invoke\n    output = {key: future.result() for key, future in zip(steps, futures)}\n             
      ~~~~~~~~~~~~~^^\n\n\n  File \"C:\\Users\\AD54619\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\concurrent\\futures\\_base.py\", line 456, in result\n    return self.__get_result()\n           ~~~~~~~~~~~~~~~~~^^\n\n\n  File \"C:\\Users\\AD54619\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n\n\n  File \"C:\\Users\\AD54619\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\concurrent\\futures\\thread.py\", line 59, in run\n    result = self.fn(*self.args, **self.kwargs)\n\n\n  File \"C:\\Users\\AD54619\\Text2Sql\\virtualen\\Lib\\site-packages\\langchain_core\\runnables\\base.py\", line 3712, in _invoke_step\n    return context.run(\n           ~~~~~~~~~~~^\n        step.invoke,\n        ^^^^^^^^^^^^\n        input,\n        ^^^^^^\n        child_config,\n        ^^^^^^^^^^^^^\n    )\n    ^\n\n\n  File \"C:\\Users\\AD54619\\Text2Sql\\virtualen\\Lib\\site-packages\\langchain_core\\runnables\\base.py\", line 4719, in invoke\n    return self._call_with_config(\n           ~~~~~~~~~~~~~~~~~~~~~~^\n        self._invoke,\n        ^^^^^^^^^^^^^\n    ...<2 lines>...\n        **kwargs,\n        ^^^^^^^^^\n    )\n    ^\n\n\n  File \"C:\\Users\\AD54619\\Text2Sql\\virtualen\\Lib\\site-packages\\langchain_core\\runnables\\base.py\", line 1925, in _call_with_config\n    context.run(\n    ~~~~~~~~~~~^\n        call_func_with_variable_args,  # type: ignore[arg-type]\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<4 lines>...\n        **kwargs,\n        ^^^^^^^^^\n    ),\n    ^\n\n\n  File \"C:\\Users\\AD54619\\Text2Sql\\virtualen\\Lib\\site-packages\\langchain_core\\runnables\\config.py\", line 430, in call_func_with_variable_args\n    return func(input, **kwargs)  # type: ignore[call-arg]\n\n\n  File \"C:\\Users\\AD54619\\Text2Sql\\virtualen\\Lib\\site-packages\\langchain_core\\runnables\\base.py\", line 4573, in _invoke\n    output = call_func_with_variable_args(\n        self.func, input, config, run_manager, **kwargs\n    )\n\n\n  File \"C:\\Users\\AD54619\\Text2Sql\\virtualen\\Lib\\site-packages\\langchain_core\\runnables\\config.py\", line 430, in call_func_with_variable_args\n    return func(input, **kwargs)  # type: ignore[call-arg]\n\n\n  File \"C:\\Users\\AD54619\\Text2Sql\\virtualen\\Lib\\site-packages\\langchain\\chains\\sql_database\\query.py\", line 131, in <lambda>\n    \"input\": lambda x: x[\"question\"] + \"\\nSQLQuery: \",\n                       ~^^^^^^^^^^^^\n\n\nKeyError: 'question'"
[chain/error] [chain:RunnableSequence > chain:RunnableAssign<input,table_info>] [116ms] Chain run errored with error:
"KeyError('question')Traceback (most recent call last):\n\n\n  File \"C:\\Users\\AD54619\\Text2Sql\\virtualen\\Lib\\site-packages\\langchain_core\\runnables\\base.py\", line 1925, in _call_with_config\n    context.run(\n    ~~~~~~~~~~~^\n        call_func_with_variable_args,  # type: ignore[arg-type]\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<4 lines>...\n        **kwargs,\n        ^^^^^^^^^\n    ),\n    ^\n\n\n  File \"C:\\Users\\AD54619\\Text2Sql\\virtualen\\Lib\\site-packages\\langchain_core\\runnables\\config.py\", line 430, in call_func_with_variable_args\n    return func(input, **kwargs)  # type: ignore[call-arg]\n\n\n  File \"C:\\Users\\AD54619\\Text2Sql\\virtualen\\Lib\\site-packages\\langchain_core\\runnables\\passthrough.py\", line 483, in _invoke\n    **self.mapper.invoke(\n      ~~~~~~~~~~~~~~~~~~^\n        input,\n        ^^^^^^\n        patch_config(config, callbacks=run_manager.get_child()),\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        **kwargs,\n        ^^^^^^^^^\n    ),\n    ^\n\n\n  File \"C:\\Users\\AD54619\\Text2Sql\\virtualen\\Lib\\site-packages\\langchain_core\\runnables\\base.py\", line 3728, in invoke\n    output = {key: future.result() for key, future in zip(steps, futures)}\n                   ~~~~~~~~~~~~~^^\n\n\n  File \"C:\\Users\\AD54619\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\concurrent\\futures\\_base.py\", line 456, in result\n    return self.__get_result()\n           ~~~~~~~~~~~~~~~~~^^\n\n\n  File \"C:\\Users\\AD54619\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\n    raise self._exception\n\n\n  File \"C:\\Users\\AD54619\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\concurrent\\futures\\thread.py\", line 59, in run\n    result = self.fn(*self.args, **self.kwargs)\n\n\n  File \"C:\\Users\\AD54619\\Text2Sql\\virtualen\\Lib\\site-packages\\langchain_core\\runnables\\base.py\", line 3712, in _invoke_step\n    return context.run(\n           ~~~~~~~~~~~^\n        step.invoke,\n        ^^^^^^^^^^^^\n        input,\n        ^^^^^^\n        child_config,\n        ^^^^^^^^^^^^^\n    )\n    ^\n\n\n  File \"C:\\Users\\AD54619\\Text2Sql\\virtualen\\Lib\\site-packages\\langchain_core\\runnables\\base.py\", line 4719, in invoke\n    return self._call_with_config(\n           ~~~~~~~~~~~~~~~~~~~~~~^\n        self._invoke,\n        ^^^^^^^^^^^^^\n    ...<2 lines>...\n        **kwargs,\n        ^^^^^^^^^\n    )\n    ^\n\n\n  File \"C:\\Users\\AD54619\\Text2Sql\\virtualen\\Lib\\site-packages\\langchain_core\\runnables\\base.py\", line 1925, in _call_with_config\n    context.run(\n    ~~~~~~~~~~~^\n        call_func_with_variable_args,  # type: ignore[arg-type]\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<4 lines>...\n        **kwargs,\n        ^^^^^^^^^\n    ),\n    ^\n\n\n  File \"C:\\Users\\AD54619\\Text2Sql\\virtualen\\Lib\\site-packages\\lang
































Type 'exit' or 'quit' to stop.

User Question: give me employee name whose salary is more than 50000
[DEBUG] Using tables: ['departments', 'employees']
Traceback (most recent call last):
  File "C:\Users\AD54619\Text2Sql\better_tiny.py", line 132, in <module>
    main()
    ~~~~^^
  File "C:\Users\AD54619\Text2Sql\better_tiny.py", line 108, in main
    chain = create_sql_query_chain(
        llm=llm,
    ...<2 lines>...
        top_k=3
    )
TypeError: create_sql_query_chain() got an unexpected keyword argument 'top_k'






























----
PS C:\Users\AD54619\Text2Sql> python better_tiny.py
‚è≥ Loading TinyLlama model (HuggingFace style)...
‚úÖ Model loaded!
Device set to use cpu

üîπTinyLlama Chat w/ MySQL (Only raw DB data printed)

Type 'exit' or 'quit' to stop.

User Question: which employee had more than 5000 salary 
[DEBUG] Using tables: ['departments', 'employees']
Traceback (most recent call last):
  File "C:\Users\AD54619\Text2Sql\better_tiny.py", line 132, in <module>
    main()
    ~~~~^^
  File "C:\Users\AD54619\Text2Sql\better_tiny.py", line 104, in main
    chain = create_sql_query_chain(
        llm=llm,
    ...<2 lines>...
        # no 'output_parser' argument here, since your version doesn't support it
    )
  File "C:\Users\AD54619\Text2Sql\virtualen\Lib\site-packages\langchain\chains\sql_database\query.py", line 122, in create_sql_query_chain  
    raise ValueError(
    ...<3 lines>...
    )
ValueError: Prompt must have input variables: 'input', 'top_k', 'table_info'. Received prompt with input variables: ['question']. Full prompt:

input_variables=['question'] input_types={} partial_variables={} template='Generate a valid MySQL query for the user question:\n{question}\n\nOnly output the SQL query. Nothing else.'

















üîπTinyLlama Chat w/ MySQL (Only raw DB data printed)

Type 'exit' or 'quit' to stop.

C:\Users\AD54619\Text2Sql\better_tiny.py:79: LangChainDeprecationWarning: The class `QuerySQLDataBaseTool` was deprecated in LangChain 0.3.12 and will be removed in 1.0. An updated version of the class exists in the :class:`~langchain-community package and should be used instead. To use it run `pip install -U :class:`~langchain-community` and import as `from :class:`~langchain_community.tools import QuerySQLDatabaseTool``.
  query_tool = QuerySQLDataBaseTool(db=wide_db)
User Question: which employee has more than 50000 salary
[DEBUG] Using tables: ['departments', 'employees']
Traceback (most recent call last):
  File "C:\Users\AD54619\Text2Sql\better_tiny.py", line 129, in <module>
    main()
    ~~~~^^
  File "C:\Users\AD54619\Text2Sql\better_tiny.py", line 99, in main
    chain = create_sql_query_chain(
        llm=llm,
    ...<2 lines>...
        output_parser=StrOutputParser(),  # ensures raw string
    )
TypeError: create_sql_query_chain() got an unexpected keyword argument 'output_parser'





    
    sql_query = tokenizer.batch_decode(outputs, skip_special_tokens=True)[0]
    return sql_query

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Generate SQL from natural language')
    parser.add_argument('--question', type=str, help='The natural language question')
    parser.add_argument('--schema_file', type=str, help='File containing the database schema')
    
    args = parser.parse_args()
    
    if args.question and args.schema_file:
        with open(args.schema_file, 'r') as f:
            schema = f.read()
        
        sql = generate_sql(args.question, schema)
        print("\nGenerated SQL Query:")
        print(sql)
    else:
        # Use the example from your code if no arguments provided
        question = "What is the average, minimum, and maximum age for all French musicians?"
        schema = """
           "stadium" "Stadium_ID" int , "Location" text , "Name" text , "Capacity" int , "Highest" int , "Lowest" int , "Average" int , foreign_key:  primary key: "Stadium_ID" [SEP] "singer" "Singer_ID" int , "Name" text , "Country" text , "Song_Name" text , "Song_release_year" text , "Age" int , "Is_male" bool , foreign_key:  primary key: "Singer_ID" [SEP] "concert" "concert_ID" int , "concert_Name" text , "Theme" text , "Year" text , foreign_key: "Stadium_ID" text from "stadium" "Stadium_ID" , primary key: "concert_ID" [SEP] "singer_in_concert"  foreign_key: "concert_ID" int from "concert" "concert_ID" , "Singer_ID" text from "singer" "Singer_ID" , primary key: "concert_ID" "Singer_ID"
        """
        
        sql = generate_sql(question, schema)
        print("\nGenerated SQL Query:")
        print(sql)


PS C:\Users\AD54619\Text2Sql> python load.py --question "What is the average, minimum, and maximum age for all French musicians?" --schema_file schema.txt
Processing query...
C:\Users\AD54619\Text2Sql\virtualen\Lib\site-packages\transformers\generation\configuration_utils.py:676: UserWarning: `num_beams` is set to 1. However, `early_stopping` is set to `True` -- this flag is only used in beam-based generation modes. You should set `num_beams>1` or unset `early_stopping`.
  warnings.warn(

Generated SQL Query:
SELECT avg(age), min(age), max(age) FROM singer WHERE country = 'France'
